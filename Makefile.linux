# Compiler settings: g++ as the compiler
CXX := g++

# Compiler flags: 
# -Wall: enable all warnings
# -O3: optimization level 3 (aggressive optimizations)
# -fPIC: position-independent code (needed for shared libraries)
# -std=c++11: use the C++11 standard
CXXFLAGS := -Wall -O3 -fPIC -std=c++11

# Linker flags for creating shared libraries
LDFLAGS := -shared

# Include directories for headers
INCLUDES := -I./include

# Additional libraries to link with (currently empty)
LIBS :=

# Directories for source files, object files, and libraries
SRC_DIR := src
OBJ_DIR := obj
LIB_DIR := sparse_matrix_mult/lib

# Get all .cpp source files from the src directory
SOURCES := $(wildcard $(SRC_DIR)/*.cpp)

# Convert source file names to object file names in the obj directory
OBJECTS := $(patsubst $(SRC_DIR)/%.cpp,$(OBJ_DIR)/%.o,$(SOURCES))

# Define the output shared library file
LIBRARY := $(LIB_DIR)/libsparse.so

# Check if OpenMP support is available by running a test
OPENMP_TEST := $(shell $(CXX) -fopenmp -dM -E - < /dev/null 2>&1 | grep -c OpenMP)

# Conditional compilation: Add OpenMP support if available
ifeq ($(OPENMP_TEST),0)
    $(info OpenMP not available. Compiling without OpenMP support.)
else
    $(info OpenMP is available. Compiling with OpenMP support.)
    # Add OpenMP flags and libraries if supported
    CXXFLAGS += -fopenmp
    LIBS += -lgomp
endif

# Targets

# Default target: Build the shared library
.PHONY: all clean
all: $(LIBRARY)

# Link object files into the shared library
$(LIBRARY): $(OBJECTS) | $(LIB_DIR)
	$(CXX) $(LDFLAGS) $^ -o $@ $(LIBS)

# Compile .cpp source files into .o object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp | $(OBJ_DIR)
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

# Create the obj and lib directories if they don't exist
$(OBJ_DIR) $(LIB_DIR):
	mkdir -p $@

# Clean target: Remove object files and libraries
clean:
	rm -rf $(OBJ_DIR) $(LIB_DIR)

# Print the value of any Makefile variable (for debugging)
print-%:
	@echo $* = $($*)
